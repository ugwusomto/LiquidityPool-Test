{"ast":null,"code":"import { createStore, compose, combineReducers, applyMiddleware } from \"redux\";\nimport { userAccountReducer, web3Reducer, rigelPoolReducer } from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport { isEmpty } from \"../utils\";\nconst initialState = {\n  web3: {\n    loading: false\n  },\n  rigelPool: {\n    loading: false\n  },\n  user: !isEmpty(localStorage.getItem(\"user\")) ? JSON.parse(localStorage.getItem(\"user\")) : {}\n};\nconst reducers = combineReducers({\n  web3: web3Reducer,\n  rigelPool: rigelPoolReducer,\n  user: userAccountReducer\n});\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, initialState, storeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/t/Documents/BLOCKCHAIN PROJECT/LiquidityPool-Test/front-end/src/store/index.js"],"names":["createStore","compose","combineReducers","applyMiddleware","userAccountReducer","web3Reducer","rigelPoolReducer","thunk","isEmpty","initialState","web3","loading","rigelPool","user","localStorage","getItem","JSON","parse","reducers","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAsE,OAAtE;AACA,SAASC,kBAAT,EAA+BC,WAA/B,EAA6CC,gBAA7C,QAAqE,WAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,MAAMC,YAAY,GAAI;AAClBC,EAAAA,IAAI,EAAC;AAACC,IAAAA,OAAO,EAAC;AAAT,GADa;AAElBC,EAAAA,SAAS,EAAG;AAACD,IAAAA,OAAO,EAAC;AAAT,GAFM;AAGlBE,EAAAA,IAAI,EAAG,CAACL,OAAO,CAACM,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAR,GAAyCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAzC,GAAoF;AAHzE,CAAtB;AAMA,MAAMG,QAAQ,GAAGhB,eAAe,CAAC;AAC7BQ,EAAAA,IAAI,EAAGL,WADsB;AAE7BO,EAAAA,SAAS,EAAGN,gBAFiB;AAG7BO,EAAAA,IAAI,EAACT;AAHwB,CAAD,CAAhC;AAMA,MAAMe,cAAc,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAtE;AACA,MAAMqB,KAAK,GAAGtB,WAAW,CAACkB,QAAD,EAAUT,YAAV,EAAuBU,cAAc,CAAChB,eAAe,CAACI,KAAD,CAAhB,CAArC,CAAzB;AACA,eAAee,KAAf","sourcesContent":["import { createStore ,compose, combineReducers ,applyMiddleware} from \"redux\";\nimport { userAccountReducer ,  web3Reducer , rigelPoolReducer}  from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport { isEmpty } from \"../utils\";\n\nconst initialState  = {\n    web3:{loading:false},\n    rigelPool : {loading:false},\n    user : !isEmpty(localStorage.getItem(\"user\")) ? JSON.parse(localStorage.getItem(\"user\")) : {},\n};\n\nconst reducers = combineReducers({\n    web3 : web3Reducer,\n    rigelPool : rigelPoolReducer ,\n    user:userAccountReducer\n});\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,initialState,storeEnhancers(applyMiddleware(thunk)));\nexport default store;"]},"metadata":{},"sourceType":"module"}